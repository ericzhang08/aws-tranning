AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sns-practice

  Sample SAM Template for sns-practice

  '
Globals:
  Function:
    Timeout: 20
Resources:
  ScheduledRuleTest:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
      - Arn:
          Ref: SNSTopicZhangYu
        Id: TargetSNSTopicZhangYu
    DependsOn:
    - SNSTopicZhangYu
  SNSTopicZhangYu:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: SNSTopicZhangYu
      KmsMasterKeyId: d9e54010-f4dd-4f45-8bec-75cbc6b034d9
  SNSTopicPolicyZhangYu:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
      - Ref: SNSTopicZhangYu
      PolicyDocument:
        Id: MyTopicPolicy
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal: '*'
          Action:
          - sns:Subscribe
          - sns:Publish
          Resource:
            Ref: SNSTopicZhangYu
  SQSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn:
        Ref: SNSTopicZhangYu
      Endpoint:
        Fn::GetAtt:
        - LambdaInvokeQueue
        - Arn
      Protocol: sqs
      RawMessageDelivery: true
    DependsOn:
    - LambdaInvokeQueue
    - SNSTopicZhangYu
  LambdaInvokeQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 604800
      VisibilityTimeout: 300
      KmsMasterKeyId: d9e54010-f4dd-4f45-8bec-75cbc6b034d9
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - MyDeadLetterQueue
          - Arn
        maxReceiveCount: 5
    DependsOn:
    - MyDeadLetterQueue
  SampleSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: LambdaInvokeQueue
      - Ref: MyDeadLetterQueue
      PolicyDocument:
        Statement:
        - Action:
          - SQS:SendMessage
          - SQS:ReceiveMessage
          Effect: Allow
          Resource:
            Ref: LambdaInvokeQueue
          Principal:
            AWS:
            - '*'
        - Action:
          - SQS:SendMessage
          - SQS:ReceiveMessage
          Effect: Allow
          Resource:
            Ref: MyDeadLetterQueue
          Principal:
            AWS:
            - '*'
    DependsOn:
    - MyDeadLetterQueue
    - LambdaInvokeQueue
  SNSPracticeLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SNSPracticeLambdaFunction
      Handler: practice.App::handleRequest
      Runtime: java8
      MemorySize: 512
      Role: arn:aws:iam::494526681395:role/for-aws-training-2
      Timeout: 60
  PermissionSNSPracticeLambdaFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: SNSPracticeLambdaFunction
      Action: lambda:InvokeFunction
      Principal: sqs.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - LambdaInvokeQueue
        - Arn
    DependsOn:
    - SNSPracticeLambdaFunction
    - LambdaInvokeQueue
  EventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - LambdaInvokeQueue
        - Arn
      FunctionName:
        Fn::GetAtt:
        - SNSPracticeLambdaFunction
        - Arn
    DependsOn:
    - SNSPracticeLambdaFunction
    - LambdaInvokeQueue
  MyDeadLetterQueue:
    Type: AWS::SQS::Queue
